name: CI
on: [pull_request]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cargo update
        run: cargo update
      - name: Build glsl
        run: |
          cd $GITHUB_WORKSPACE/glsl
          cargo build --verbose
      - name: Test glsl
        run: |
          cd $GITHUB_WORKSPACE/glsl
          cargo test --verbose
      - name: Test glsl (piglit)
        run: |
          cd $GITHUB_WORKSPACE/glsl-piglit
          ./fetch-piglit.sh
          cargo run --verbose -- piglit
      - name: Build glsl-tree
        run: |
          cd $GITHUB_WORKSPACE/glsl-tree
          cargo build --verbose
      - name: Switch to nightly Rust
        run: rustup default nightly
      - name: Build glsl-quasiquote (nightly)
        run: |
          cd $GITHUB_WORKSPACE/glsl-quasiquote
          cargo build --verbose
      - name: Test glsl-quasiquote (nightly)
        run: |
          cd $GITHUB_WORKSPACE/glsl-quasiquote
          cargo test --verbose

  build-macos:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install Rust
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile=minimal
      - name: Cargo update
        run: |
          source ~/.cargo/env
          cargo update
      - name: Build glsl
        run: |
          source ~/.cargo/env
          cd $GITHUB_WORKSPACE/glsl
          cargo build --verbose
      - name: Test glsl
        run: |
          source ~/.cargo/env
          cd $GITHUB_WORKSPACE/glsl
          cargo test --verbose
      - name: Test glsl (piglit)
        run: |
          cd $GITHUB_WORKSPACE/glsl-piglit
          ./fetch-piglit.sh
          cargo run --verbose -- piglit
      - name: Build glsl-tree
        run: |
          source ~/.cargo/env
          cd $GITHUB_WORKSPACE/glsl-tree
          cargo build --verbose
      - name: Switch to nightly Rust
        run: |
          source ~/.cargo/env
          rustup default nightly
      - name: Build glsl-quasiquote (nightly)
        run: |
          source ~/.cargo/env
          cd $GITHUB_WORKSPACE/glsl-quasiquote
          cargo build --verbose
      - name: Test glsl-quasiquote (nightly)
        run: |
          source ~/.cargo/env
          cd $GITHUB_WORKSPACE/glsl-quasiquote
          cargo test --verbose

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cargo update
        run: cargo update
      - name: Build glsl
        run: |
          cd glsl
          cargo build --verbose
      - name: Test glsl
        run: |
          cd glsl
          cargo test --verbose
      - name: Test glsl (piglit)
        run: |
          cd glsl-piglit
          ./fetch-piglit.ps1
          cargo run --verbose -- piglit
      - name: Build glsl-tree
        run: |
          cd glsl-tree
          cargo build --verbose
      - name: Switch to nightly Rust
        run: rustup default nightly
      - name: Build glsl-quasiquote (nightly)
        run: |
          cd glsl-quasiquote
          cargo build --verbose
      - name: Test glsl-quasiquote (nightly)
        run: |
          cd glsl-quasiquote
          cargo test --verbose

  check-readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install cargo-sync-readme
        run: cargo install --force cargo-sync-readme
      - name: Check
        run: |
          cd $GITHUB_WORKSPACE/glsl
          cargo sync-readme -c
          cd $GITHUB_WORKSPACE/glsl-quasiquote
          cargo sync-readme -c

  check-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Ensure code is correctly formatted
        run: cargo fmt -- --check
